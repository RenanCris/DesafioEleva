// <auto-generated />
using System;
using ElevaEducacao.Infra.EFCore.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ElevaEducacao.Infra.EFCore.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200907155646_AjusteMapForeigkey")]
    partial class AjusteMapForeigkey
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ElevaEducacao.Domain.Bairro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Descricao")
                        .IsUnique();

                    b.ToTable("Bairro");
                });

            modelBuilder.Entity("ElevaEducacao.Domain.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .IsUnicode(false);

                    b.Property<int>("UFId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UFId");

                    b.ToTable("Cidade");
                });

            modelBuilder.Entity("ElevaEducacao.Domain.Disciplina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Descricao")
                        .IsUnique();

                    b.ToTable("Disciplina");
                });

            modelBuilder.Entity("ElevaEducacao.Domain.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Complemento")
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .IsUnicode(false);

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .IsUnicode(false);

                    b.Property<int>("IdBairro")
                        .HasColumnType("int");

                    b.Property<int>("IdCidade")
                        .HasColumnType("int");

                    b.Property<int>("IdEscola")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("IdBairro");

                    b.HasIndex("IdCidade");

                    b.HasIndex("IdEscola")
                        .IsUnique();

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("ElevaEducacao.Domain.Escola", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("AtendeEducacaoEspecial")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("CategoriaAdministrativa")
                        .HasColumnType("int");

                    b.Property<bool>("ConvenioPoderPublico")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("TipoLocalizacao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Escola");
                });

            modelBuilder.Entity("ElevaEducacao.Domain.HistoricoStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(2020, 9, 7, 12, 56, 46, 239, DateTimeKind.Local).AddTicks(1385));

                    b.Property<int>("IdEscola")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdEscola");

                    b.ToTable("HistoricoStatus");
                });

            modelBuilder.Entity("ElevaEducacao.Domain.Modalidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdEscola")
                        .HasColumnType("int");

                    b.Property<int>("IdModalidadeEnsino")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdEscola");

                    b.ToTable("Modalidade");
                });

            modelBuilder.Entity("ElevaEducacao.Domain.Telefone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DDD")
                        .HasColumnType("int");

                    b.Property<int>("IdEscola")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdEscola");

                    b.ToTable("Telefone");
                });

            modelBuilder.Entity("ElevaEducacao.Domain.Turma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CodigoPesquisa")
                        .IsRequired()
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("HorasAula")
                        .HasColumnType("int");

                    b.Property<int>("IdEscola")
                        .HasColumnType("int");

                    b.Property<int>("TotalVagas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("TotalVagasOcupadas")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdEscola");

                    b.ToTable("Turma");
                });

            modelBuilder.Entity("ElevaEducacao.Domain.TurmaDisciplina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdTurma")
                        .HasColumnType("int");

                    b.Property<int>("IdDisciplina")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataModificacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataVinculacao")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id", "IdTurma", "IdDisciplina");

                    b.HasIndex("IdDisciplina");

                    b.HasIndex("IdTurma");

                    b.ToTable("TurmaDisciplina");
                });

            modelBuilder.Entity("ElevaEducacao.Domain.UF", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Descricao")
                        .IsUnique();

                    b.ToTable("UF");
                });

            modelBuilder.Entity("ElevaEducacao.Domain.Cidade", b =>
                {
                    b.HasOne("ElevaEducacao.Domain.UF", "UF")
                        .WithMany("Cidades")
                        .HasForeignKey("UFId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ElevaEducacao.Domain.Endereco", b =>
                {
                    b.HasOne("ElevaEducacao.Domain.Bairro", "Bairro")
                        .WithMany("Enderecos")
                        .HasForeignKey("IdBairro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElevaEducacao.Domain.Cidade", "Cidade")
                        .WithMany("Enderecos")
                        .HasForeignKey("IdCidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElevaEducacao.Domain.Escola", "Escola")
                        .WithOne("Endereco")
                        .HasForeignKey("ElevaEducacao.Domain.Endereco", "IdEscola")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ElevaEducacao.Domain.HistoricoStatus", b =>
                {
                    b.HasOne("ElevaEducacao.Domain.Escola", "Escola")
                        .WithMany("StatusHistorico")
                        .HasForeignKey("IdEscola")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ElevaEducacao.Domain.Modalidade", b =>
                {
                    b.HasOne("ElevaEducacao.Domain.Escola", "Escola")
                        .WithMany("Modalidades")
                        .HasForeignKey("IdEscola")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ElevaEducacao.Domain.Telefone", b =>
                {
                    b.HasOne("ElevaEducacao.Domain.Escola", "Escola")
                        .WithMany("Telefones")
                        .HasForeignKey("IdEscola")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ElevaEducacao.Domain.Turma", b =>
                {
                    b.HasOne("ElevaEducacao.Domain.Escola", "Escola")
                        .WithMany("Turmas")
                        .HasForeignKey("IdEscola")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ElevaEducacao.Domain.TurmaDisciplina", b =>
                {
                    b.HasOne("ElevaEducacao.Domain.Disciplina", "Disciplina")
                        .WithMany("Turmas")
                        .HasForeignKey("IdDisciplina")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElevaEducacao.Domain.Turma", "Turma")
                        .WithMany("Disciplinas")
                        .HasForeignKey("IdTurma")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
