// <auto-generated />
using ElevaEducacao.Infra.EFCore.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ElevaEducacao.Infra.EFCore.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200906182305_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ElevaEducacao.Domain.Bairro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Descricao")
                        .IsUnique();

                    b.ToTable("Bairro");
                });

            modelBuilder.Entity("ElevaEducacao.Domain.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .IsUnicode(false);

                    b.Property<int>("UFId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UFId");

                    b.ToTable("Cidade");
                });

            modelBuilder.Entity("ElevaEducacao.Domain.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BairroId")
                        .HasColumnType("int");

                    b.Property<int>("CidadeId")
                        .HasColumnType("int");

                    b.Property<string>("Complemento")
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .IsUnicode(false);

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .IsUnicode(false);

                    b.Property<string>("Numero")
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("BairroId");

                    b.HasIndex("CidadeId");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("ElevaEducacao.Domain.UF", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Descricao")
                        .IsUnique();

                    b.ToTable("UF");
                });

            modelBuilder.Entity("ElevaEducacao.Domain.Cidade", b =>
                {
                    b.HasOne("ElevaEducacao.Domain.UF", "UF")
                        .WithMany("Cidades")
                        .HasForeignKey("UFId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ElevaEducacao.Domain.Endereco", b =>
                {
                    b.HasOne("ElevaEducacao.Domain.Bairro", "Bairro")
                        .WithMany("Enderecos")
                        .HasForeignKey("BairroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElevaEducacao.Domain.Cidade", "Cidade")
                        .WithMany("Enderecos")
                        .HasForeignKey("CidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
